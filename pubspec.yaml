name: medina_stores
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.4.0 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  # DEEP LINKS
  app_links: ^6.1.4 # Package for handling deep links and app links in Flutter applications.
  # Firebase dependencies
  firebase_core: ^3.3.0 # Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_messaging: ^15.0.4 # Flutter plugin for Firebase Cloud Messaging, a cross-platform messaging solution that lets you reliably deliver messages at no cost.
  # NOTIFICATIONS
  flutter_local_notifications: ^17.2.1 # A Flutter plugin for displaying local notifications on Android and iOS.
  # LOCALIZATION
  easy_localization: ^3.0.7 # A Flutter package to make internationalization and localization easier.
  # RESPONSIVE
  flutter_screenutil: ^5.9.3 # A flutter plugin for adapting screen and font size.
  # STATE MANAGEMENT
  flutter_bloc: ^8.1.6 # A Flutter package that helps implement the BLoC design pattern.
  # LOCAL STORAGE
  shared_preferences: ^2.3.1 # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  flutter_secure_storage: ^9.2.2 # Flutter Secure Storage provides API to store data in secure storage.
  # IMAGE UTILS
  image_picker: ^1.1.2 # Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera.
  image_cropper: ^8.0.1 # Flutter plugin for cropping images.
  cached_network_image: ^3.4.0 # A flutter library to show images from the internet and keep them in the cache directory.
  # SHARING
  share_plus: ^10.0.0 # Flutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.
  # LOCATION SERVICES
  google_maps_flutter: ^2.9.0 # A Flutter plugin for integrating Google Maps in iOS and Android applications.
  geolocator: ^12.0.0 # A Flutter geolocation plugin which provides easy access to platform specific location services.
  geocoding: ^3.0.0 # A Flutter geocoding plugin which provides easy access to platform specific geocoding services.
  # ASSETS VIEWER
  flutter_svg: ^2.0.10 # An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  lottie: ^3.1.2 # A Flutter plugin to render Lottie animations on mobile devices.
  # CONNECTIVITY
  flutter_offline: ^4.0.0 # A Flutter plugin for handling connectivity, providing information about the connectivity state.
  # DEPENDENCY INJECTION
  get_it: ^7.7.0 # A simple Service Locator for Dart and Flutter projects with some additional goodies highly inspired by Splat.
  # NETWORKING
  dio: ^5.5.0+1 # A powerful Http client for Dart, which supports Interceptors, Global configuration, FormData, Request Cancellation, File downloading, Timeout etc.
  # SHOWING ALERTS
  fluttertoast: ^8.2.6
  # OTHER UTILS
  equatable: ^2.0.5 # Simplify Equality Comparisons
  rxdart: ^0.28.0 # RxDart is a reactive functional programming library for Google Dart, based on ReactiveX.
  shimmer: ^3.0.0 # A package provides an easy way to add shimmer effect in Flutter project.
  clipboard: ^0.1.3 # A Flutter plugin for copying and pasting content to and from the clipboard.
  pinput: ^5.0.0 # A Flutter package for entering secure pin code.
  socket_io_client: ^2.0.3 # A Dart client for Socket.IO.
  dartz: ^0.10.1 # A functional programming library for Dart.
  url_launcher: ^6.3.0 # A Flutter plugin for launching a URL in the mobile platform.
  intl: ^0.19.0 # This package provides internationalization and localization facilities, including message translation
  redacted: ^1.0.12 # A Flutter package to show loading of some widget.
  video_player: ^2.9.1 # Flutter plugin for displaying inline video with other Flutter widgets on Android and iOS.

  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  video_player: ^2.9.1

dev_dependencies:
  build_runner:
  flutter_gen_runner:

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/lotties/
    - assets/icons/svg/
    - assets/icons/png/
    - assets/translations/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

flutter_gen:
  output: lib/core/resources
  line_length: 80

  assets:
    enabled: true
    outputs:
      class_name: AppAssets

  integrations:
    flutter_svg: true
    lottie: true
